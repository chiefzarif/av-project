apiVersion: apps/v1
kind: Deployment
metadata:
  name: visionguard
  labels:
    app: visionguard
    version: v1.0.0
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: visionguard
  template:
    metadata:
      labels:
        app: visionguard
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: visionguard
        image: visionguard:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        env:
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: MODEL_VARIANT
          valueFrom:
            configMapKeyRef:
              name: visionguard-config
              key: model_variant
        - name: CONFIDENCE_THRESHOLD
          valueFrom:
            configMapKeyRef:
              name: visionguard-config
              key: confidence_threshold
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: model-cache
          mountPath: /home/appuser/.cache/torch
      volumes:
      - name: model-cache
        emptyDir:
          sizeLimit: 1Gi
      # Uncomment for GPU support
      # nodeSelector:
      #   cloud.google.com/gke-accelerator: nvidia-tesla-t4
      # tolerations:
      # - key: nvidia.com/gpu
      #   operator: Exists
      #   effect: NoSchedule
---
# GPU-enabled deployment (optional)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: visionguard-gpu
  labels:
    app: visionguard-gpu
    version: v1.0.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: visionguard-gpu
  template:
    metadata:
      labels:
        app: visionguard-gpu
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: visionguard
        image: visionguard:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        env:
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: MODEL_VARIANT
          value: "yolov8l"
        resources:
          requests:
            memory: "4Gi"
            cpu: "2000m"
            nvidia.com/gpu: 1
          limits:
            memory: "8Gi"
            cpu: "4000m"
            nvidia.com/gpu: 1
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - name: model-cache
          mountPath: /home/appuser/.cache/torch
      volumes:
      - name: model-cache
        emptyDir:
          sizeLimit: 2Gi
      nodeSelector:
        cloud.google.com/gke-accelerator: nvidia-tesla-t4
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
