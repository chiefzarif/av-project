apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: visionguard-ingress
  labels:
    app: visionguard
  annotations:
    # NGINX Ingress Controller
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"

    # Rate limiting
    nginx.ingress.kubernetes.io/limit-rps: "100"

    # AWS ALB (uncomment if using AWS)
    # kubernetes.io/ingress.class: alb
    # alb.ingress.kubernetes.io/scheme: internet-facing
    # alb.ingress.kubernetes.io/target-type: ip
    # alb.ingress.kubernetes.io/healthcheck-path: /health

    # GCP GCE (uncomment if using GCP)
    # kubernetes.io/ingress.class: gce
    # cloud.google.com/neg: '{"ingress": true}'

    # Cert-manager for TLS
    # cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - visionguard.example.com
    secretName: visionguard-tls
  rules:
  - host: visionguard.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: visionguard
            port:
              number: 8000
---
# Network Policy for pod-to-pod communication
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: visionguard-netpol
spec:
  podSelector:
    matchLabels:
      app: visionguard
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8000
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8000
  egress:
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 53  # DNS
    - protocol: UDP
      port: 53  # DNS
  - to:
    - podSelector: {}
  - ports:
    - protocol: TCP
      port: 443  # HTTPS (for model downloads)
    - protocol: TCP
      port: 80   # HTTP
